[section 1]
; beamlist must be list of ints
beamlist = 64016.0
; radarname can be pfisr, risr, or sondastrom
radarname = PFISR

[simparams]
; tint integration time in seconds
tint = 1.0
; startfile location of start data for fitter will use relative path from ini file
startfile =
; timelim length of the simulation in seconds
timelim = 300.0
; dtype type of complex number used can be 64 128 or 256
dtype = <type 'numpy.complex128'>
; pulsetype type of pulse can be long barker or alternating
pulsetype = Long
; rangelims range limits for the fitted data in km
rangelims = 50 1050
; numpoints number of samples used to create spectrums used to make data
numpoints = 128
; ambupsamp up sampling factor used when fitting
ambupsamp = 1
; ipp inter pulse period in seconds
ipp = 0.01
; fitinter time interval between fitted parameters in seconds
fitinter = 1.0
; pulselength length of pulse in seconds
pulselength = 0.00028
; t_s sampling frequency in seconds
t_s = 2e-05
; fittype string can hold either acf of spectrum
fittype = ACF
; nns number of noise samples per noise pulse
nns = 28
; species species available to be used e- must always be last. possible ion species o+ no+ n2+ 02+ n+ h+
species = O+ e-
; nnp number of noise pulses per integration period depreciated
nnp = 100
fitmode = 0


[simparamsnames]
tint = Tint
startfile = startfile
timelim = TimeLim
dtype = dtype
pulsetype = Pulsetype
rangelims = RangeLims
numpoints = numpoints
ambupsamp = ambupsamp
ipp = IPP
fitinter = Fitinter
pulselength = Pulselength
t_s = t_s
fittype = FitType
nns = NNs
species = species
nnp = NNp
fitmode = fitmode
